This sample directory creates a Twitter-like demo application using
Database Jones.

The two SQL scripts, create_tweet_tables.sql and drop_tweet_tables.sql,
contain DDL for MySQL to create the five tables used by the demo application.
Execute these files using the standard mysql command, e.g.

mysql -u root < create_tweet_tables.sql

This directory contains one rather complete demo program, "tweet.js", which
can run either as a command-line tool or as a REST web server.  There is also
a little shell script, test_tweet.sh, that thoroughly demonstrates and tests
tweet.js in both modes.

The tweet.js program is somewhat complex, so we have also included some very
simple demonstration code illustrating the Jones APIs.

find.js illustrates using session.find() to retreive a single record from a
table.

insert.js illustrates using session.persist() to store a record.

scan.js illustrates using session.createQuery() to query a table.  The query
returns multiple records.

join.js illustrates using mappings to define relationships between tables, and
then using session.find() to return a projection.  The equivalent query in
SQL would be a join.
